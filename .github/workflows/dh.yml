name: CI for dockerhub

on:
  push:
    branches: [ 'main' ]
#TEMP enable all compile 
#    paths:
#      - 'app/**'
#      - 'app3/**'
  workflow_dispatch:
    

concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

env:
  image_prefix: docker.io/dleeha

jobs:
  build:
    name: build push DockerHub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - build-dir: app1
            app-dir: app/
          - build-dir: app2
            app-dir: app/
          - build-dir: app3
            app-dir: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: get code changes
      uses: lots0logs/gh-action-get-changed-files@2.1.4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - id: files
      uses: jitterbit/get-changed-files@v1
    - run: |
        for changed_file in ${{ steps.files.outputs.all }}; do
          echo "Do something with this ${changed_file}."
        done
    - name: read file
      id: set_var
      run: |
        echo "===="
        git diff-tree --no-commit-id --name-only -r ${{ github.sha }}
        echo "===="

        echo "===="

        content=`cat ${HOME}/files.json`
        content="${content//'%'/''}"
        content="${content//$'\n'/''}"
        content="${content//$'\r'/''}"
        content="${content//'['/''}"
        content="${content//']'/''}"
        #content="${content//'%'/'%25'}"
        #content="${content//$'\n'/'%0A'}"
        #content="${content//$'\r'/'%0D'}"
        echo "content: $content"

        status=$(grep 'github' ${HOME}/files.json)
        echo "status: $status"

        # $(echo $content | grep "${{ matrix.app-dir }}${{ matrix.build-dir }}"
        #contains( $content , "${{ matrix.app-dir }}${{ matrix.build-dir }}" )
        echo "::set-output name=packageJson::$status"
        echo "::set-env name=CHANGED_STATUS::$status"
    - name: print status
      if: contains(env.CHANGED_STATUS, 'github')
      run: |
        echo "${{ steps.set_var.outputs.packageJson }}"

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

#    - name: setup structure TEMP
#      run: |
#        cd app
#        ln -s ../app3 .

    - name: ${{ matrix.build-dir }} - Set version info
      run: |
        cd ${{ matrix.app-dir }}${{ matrix.build-dir }}
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        echo "my_tag=${GITHUB_REF##*/}-${git_hash}" >> $GITHUB_ENV

        folder=$(pwd)
        echo "folder=${folder}"
        app_name="${folder##*/}"

        #echo "my_image=${{ env.image_prefix }}/${app_name}" >> $GITHUB_ENV

    - name: ${{ matrix.build-dir }} - Build and push to docker hub
      uses: docker/build-push-action@v2
      with:
        context: ./${{ matrix.app-dir }}${{ matrix.build-dir }}
        push: true
        tags: ${{ env.image_prefix }}/${{ matrix.build-dir }}:${{ env.my_tag }}

    - name: ${{ matrix.build-dir }} - Update Version in manifest
      run: |
          version=$(cat ./${{ matrix.app-dir }}${{ matrix.build-dir }}/charts/${{ matrix.build-dir }}/values.yaml | grep version: | awk '{print $2}')
          #sed -i "s|$version|${GITHUB_REF##*/}-${my_tag}|" ./${{ matrix.build-dir }}/charts/${{ matrix.build-dir }}/values.yaml
          sed -i "s|$version|${{ env.image_prefix }}/${{ matrix.build-dir }}:${my_tag}|" ./${{ matrix.app-dir }}${{ matrix.build-dir }}/charts/${{ matrix.build-dir }}/values.yaml

    - name: ${{ matrix.build-dir }} - Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.build-dir }}-artifact
        path: ./${{ matrix.app-dir }}${{ matrix.build-dir }}/charts/${{ matrix.build-dir }}/values.yaml
        if-no-files-found: error
        retention-days: 3

  update_manifest:
    needs: build
    name: updates manifest for k8s deployment
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

#    - name: setup structure TEMP
#      run: |
#        cd app
#        ln -s ../app3 .

    - uses: actions/download-artifact@v3
      env: 
        app_name: app1
      with:
        name: ${{ env.app_name }}-artifact
        path: ./app/${{ env.app_name }}/charts/${{ env.app_name }}

    - uses: actions/download-artifact@v3
      env: 
        app_name: app2
      with:
        name: ${{ env.app_name }}-artifact
        path: ./app/${{ env.app_name }}/charts/${{ env.app_name }}

    - uses: actions/download-artifact@v3
      env: 
        app_name: app3
      with:
        name: ${{ env.app_name }}-artifact
        path: ././${{ env.app_name }}/charts/${{ env.app_name }}

#    - name: teardown structure TEMP
#      run: |
#        cd app
#        rm app3

    - name: Commit and push manifest changes
      uses: devops-infra/action-commit-push@v0.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_message: Version updated

    
