# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ 'main' ] # toggle activation

  # Allows you to run this workflow manually from the Actions tab
##  workflow_dispatch:

concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

env:
  #REGISTRY: docker.io
  #IMAGE_NAME: ${{ github.repository }}
  image_prefix: docker.io/dleeha

jobs:
  build:
    name: build push DockerHub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-dir: ['app1','app2']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: ${{ matrix.build-dir }} - Set version info
      run: |
        cd ${{ matrix.build-dir }}
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        echo "my_tag=${GITHUB_REF##*/}-${git_hash}" >> $GITHUB_ENV

        folder=$(pwd)
        echo "folder=${folder}"
        app_name="${folder##*/}"

        #echo "my_image=${{ env.image_prefix }}/${app_name}" >> $GITHUB_ENV


    - name: ${{ matrix.build-dir }} - Build and push to docker hub
      uses: docker/build-push-action@v2
      with:
        context: ./${{ matrix.build-dir }}
        push: true
        tags: ${{ env.image_prefix }}/${{ matrix.build-dir }}:${{ env.my_tag }}

    - name: ${{ matrix.build-dir }} - Update Version in manifest
      run: |
          version=$(cat ./${{ matrix.build-dir }}/charts/${{ matrix.build-dir }}/values.yaml | grep version: | awk '{print $2}')
          #sed -i "s|$version|${GITHUB_REF##*/}-${my_tag}|" ./${{ matrix.build-dir }}/charts/${{ matrix.build-dir }}/values.yaml
          sed -i "s|$version|${{ env.image_prefix }}/${{ matrix.build-dir }}:${my_tag}|" ./${{ matrix.build-dir }}/charts/${{ matrix.build-dir }}/values.yaml

    - name: ${{ matrix.build-dir }} - Upload Artifact
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.build-dir }}-artifact
        path: ./${{ matrix.build-dir }}/charts/${{ matrix.build-dir }}/values.yaml

#    - uses: kanga333/variable-mapper@master
#      id: export
#      with:
#        key: "${{github.base_ref}}"
#        map: |
#          {
#            "master": {
#              "environment": "production"
#            },
#            ".*": {
#              "environment": "development"
#            }
#          }
#        export_to: env,log,output
#    - name: Echo environment and output
#      run: |
#        echo ${{ env.environment }}
#        echo ${{ steps.export.outputs.environment }}          

#    - name: ${{ matrix.build-dir }} - Commit and push changes
#      uses: devops-infra/action-commit-push@v0.3
#      with:
#        github_token: ${{ secrets.GITHUB_TOKEN }}
#        commit_message: Version updated

  update_manifest:
    needs: build
    name: updates manifest for k8s deployment
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2




    - env:
        app_name: app1
      run: rm ./${{ env.app_name }}/charts/${{ env.app_name }}/values.yaml
    - uses: actions/download-artifact@v3
      env: 
        app_name: app1
      with:
        name: ${{ env.app_name }}-artifact
        #path: ./${{ env.app_name }}/charts/${{ env.app_name }}/values.yaml
    - env:
        app_name: app1
      run: cat ./${{ env.app_name }}/charts/${{ env.app_name }}/values.yaml | grep version




    - env:
        app_name: app2
      run: rm ./${{ env.app_name }}/charts/${{ env.app_name }}/values.yaml
    - uses: actions/download-artifact@v3
      env: 
        app_name: app2
      with:
        name: ${{ env.app_name }}-artifact
        #path: ./${{ env.app_name }}/charts/${{ env.app_name }}/values.yaml
    - env:
        app_name: app2
      run: cat ./${{ env.app_name }}/charts/${{ env.app_name }}/values.yaml | grep version

    
    - run: cat ./values.yaml



    - name: Commit and push manifest changes
      uses: devops-infra/action-commit-push@v0.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_message: Version updated

    
