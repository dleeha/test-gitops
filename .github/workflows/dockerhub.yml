# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ 'main' ] # toggle activation

  # Allows you to run this workflow manually from the Actions tab
##  workflow_dispatch:

env:
  #REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # This workflow contains a single job called "build"
  build:
    ##dl:
    name: building and pushing to DockerHub
    
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set version info
      id: step_one
      run: |
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        echo "my_tag=${git_hash}" >> $GITHUB_ENV
        echo "final_tag=${IMAGE_NAME}:${my_tag}" >> $GITHUB_ENV

    - name: Build and push to docker hub
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.final_tag }}
        #tags: ${{ env.IMAGE_NAME }}:${{ env.my_tag }}

    - name: Update Version in manifest
      #env:
        #my_tag: ${{ env.my_tag }}
      run: |
          version=$(cat ./charts/helm-example/values.yaml | grep version: | awk '{print $2}')
          
          #echo "IMAGE_NAME:$IMAGE_NAME"
          #echo "my_tag:$my_tag"
          #new_tag=$(echo "$IMAGE_NAME:$my_tag")

          
          #sed -i "s/$version/${GITHUB_REF##*/}-${my_tag}/" ./charts/helm-example/values.yaml

          echo "final_tag here: ${final_tag}"
          sed -i "s/$version/${final_tag}/" ./charts/helm-example/values.yaml

          #new_tag="test:${my_tag}"
          #echo "new_tag: ${new_tag}"
          #sed -i "s/$version/${new_tag}/" ./charts/helm-example/values.yaml
          
    - name: Commit and push changes
      uses: devops-infra/action-commit-push@v0.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_message: Version updated
